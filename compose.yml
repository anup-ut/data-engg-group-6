services:
  clickhouse-server:
    # ClickHouse analytical database server
    image: clickhouse/clickhouse-server
    container_name: clickhouse-server-group-6
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
      CLICKHOUSE_DB: default
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1

    ports:
      - "8123:8123" # HTTP interface
      - "9000:9000" # Native client interface
    volumes:
      # This makes our local CSVs available inside the container.
      - ./sample_data:/var/lib/clickhouse/user_files
      # Mount local SQL files to run them via the ClickHouse client.
      - ./sql:/sql
    # Best practice from official docs to prevent "too many open files" errors.
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123/ping"]
      interval: 5s
      retries: 20

  dbt:
    # dbt container for building and testing ClickHouse models
    build:
      context: .               # Build context is the current directory
      dockerfile: Dockerfile   # Use the Dockerfile in this directory to build dbt image
    container_name: dbt-group-6
    depends_on:
      - clickhouse-server      # Ensure ClickHouse starts before dbt
    volumes:
      - ./sample_data:/var/lib/clickhouse/user_files # Shared folder for input files
      - ./sql:/sql                                  # Shared SQL scripts
      - ./dbt_project:/dbt                                  # Mount local dbt project directory
    working_dir: /dbt          # Set dbt project directory as the working directory
    tty: true                  # Keep container running for interactive dbt commands

    # --- Airflow metadata database ---
  airflow-db:
    container_name: airflow-db-group-6
    image: postgres:16.4
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      PGUSER: airflow
      PGPASSWORD: airflow
      PGDATABASE: airflow
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata_airflow:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      retries: 5
    restart: always

      # --- pgAdmin UI for both databases ---
  pgadmin:
    container_name: pgadmin
    image: elestio/pgadmin:REL-8_10
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      CSRF_ENABLED: "False"
    ports:
      - "5050:80"
    depends_on:
      - airflow-db
      # - prices-db

  # --- Airflow Webserver ---
  airflow-webserver:
    image: apache/airflow:2.8.1
    container_name: airflow-webserver
    command: webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      # AIRFLOW_CONN_PRICES_DB: postgresql+psycopg2://prices_user:prices_pass@prices-db:5432/prices_db
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./data/orders:/tmp/data/orders
    depends_on:
      - airflow-init
      - airflow-db
      # - prices-db
    restart: always

  # --- Airflow Scheduler ---
  airflow-scheduler:
    image: apache/airflow:2.8.1
    container_name: airflow-scheduler
    command: scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      # AIRFLOW_CONN_PRICES_DB: postgresql+psycopg2://prices_user:prices_pass@prices-db:5432/prices_db
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    depends_on:
      - airflow-init
      - airflow-db
      # - prices-db
    restart: always

  # --- Airflow DB initialization & user setup ---
  airflow-init:
    image: apache/airflow:2.8.1
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init
        airflow users create \
          --username airflow \
          --password airflow \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    depends_on:
      - airflow-db
      # - prices-db
    restart: "no"
